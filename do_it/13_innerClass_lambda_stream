## 13-1 내부 클래스
* 내부 클래스
  - (inner class)(= 중첩 클래스)  
    : 클래스 내부에 선언한 클래스  
    + 외부 클래스와 밀접한 관련이 있음
    + 그 밖의 다른 클래스와 협력할 일이 없는 경우에 사용
    ```
    class Out{ // 외부 클래스
      class In{ // 내부 클래스
        ...
      }
    }
    ```
  - 내부 클래스의 유형  
     : 선언하는 위치, 예약어에 따라 나뉨  
    + 인스턴스 내부 클래스
    + 정적(static) 내부 클래스
    + 지역(local) 내부 클래스
    + 익명(anonymous) 내부 클래스  
      : 클래스 이름 없이 선언하고 바로 생성하여 사용  

  - 변수 유형과 내부 클래스 유형 비교
  ```
  // 변수

  class ABC{
      int n1; // 인스턴스 변수
      static iint n2; // 정적 변수

      public void abc(){
          int i; // 지역 변수
      }
  }
  ```
  ```
  // 내부 클래스

  class ABC{// 외부 클래스
      class In {  // 인스턴스 내부 클래스
          static class Sln{ // 정적 내부 클래스
          }
      }
      public void abc(){
          class Local{ // 지역 내부 클래스
          }
      }
  }
  ```

* 인스턴스 내부 클래스(instance inner class)  
  : 인스턴스 변수를 선언할 때와 같은 위치에 선언하며, 외부 클래스 내부에서만 생성하여 사용하는 객체를 선언할 때 사용  
  - 다른 외부 클래스에서 사용할 일이 없는 경우 정의함
  - 외부 클래스 생성 후 생성됨
    + cf) <-> 정적 내부 클래스
    ```
    package innerClass;

    public class OutClass { // 외부 클래스
        private int num = 10; // 외부 클래스 - private 변수
        private static int sNum = 20; // 외부 클래스 - 정적 변수

        private InClass inClass; // 내부 클래스 자료형 변수를 먼저 선언

        // 외부 클래스 디폴트 생성자: 외부 클래스가 생성된 후에 내부 클래스 생성 가능
        public Outclass(){
            inClass = new inClass();
        }

        class InClass { // 인스턴스 내부 클래스
            int inNum = 200; // 내부 클래스 - 인스턴스 변수
            //static int sInNum = 200; // 인스턴스 내부 클래스에 정적 변수 선언 불가능

            void inTest(){
                System.out.println("OutClass num = " + num);
                System.out.println("OutClass num = " + sNum);
            }

            // 인스턴스 내부 클래스에 정적 메서드 선언 불가능
            //static void sTest(){
            //}

        }
        public void usingClass(){
            inClass.inTest();
        }
    }

    public class InnerTest{
        public static void main(String[] args){
            OutClass outclass = new inClass();
            outClass.usingClass(); // 내부 클래스 기능 호출
        }
    }
    ```

* 정적 내부 클래스(static inner Class)
